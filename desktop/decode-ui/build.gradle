plugins {
	id 'application'
	//如果需要使用kotlin
	id 'org.jetbrains.kotlin.jvm'
	id 'edu.sc.seis.launch4j'
	id 'com.github.johnrengelman.shadow'
	id 'org.beryx.runtime'
	id 'com.github.gmazzo.buildconfig'
}

ext {
	YXLogDecodeVersion = "1.9.1"
}

buildConfig {
	buildConfigField('String', 'YXLogDecodeVersion', "\"${YXLogDecodeVersion}\"")
}

dependencies {
	implementation(project(':desktop:decode-core'))

	implementation 'com.formdev:flatlaf:2.4'
	implementation 'com.formdev:flatlaf-extras:2.4'
	implementation 'com.miglayout:miglayout-swing:5.3'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	// https://mvnrepository.com/artifact/org.ini4j/ini4j
	implementation 'org.ini4j:ini4j:0.5.4'
	// https://mvnrepository.com/artifact/commons-io/commons-io
	implementation 'commons-io:commons-io:2.13.0'
	implementation 'net.lingala.zip4j:zip4j:2.11.5'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
}

application {
	applicationName = 'decode-ui'
	mainClass.set('top.yinlingfeng.xlog.decode.ui.XLogDecodeUi')
	// The option -XX:+UseG1GC is only relevant for Java 8. Starting with Java 9 G1GC is already the default GC
	applicationDefaultJvmArgs = ['-Xms128M', '-XX:MaxRAMPercentage=70.0', '-XX:+UseG1GC', '-Dfile.encoding=utf-8',
								 '-Dawt.useSystemAAFontSettings=lcd', '-Dswing.aatext=true',
								 '-Djava.util.Arrays.useLegacyMergeSort=true']
}

applicationDistribution.with {
	into('') {
		from '../'
		include 'README.md'
		include 'NOTICE'
		include 'LICENSE'
	}
}

jar {
	manifest {
		if( JavaVersion.current() >= JavaVersion.VERSION_1_9 ) {
			attributes(
					"Main-Class": application.mainClass.get(),
					"Class-Path": configurations.runtimeClasspath.collect { it.getName() }.join(' '),
					"Multi-Release": true
			)
		} else {
			attributes(
					"Main-Class": application.mainClass.get(),
					"Class-Path": configurations.runtimeClasspath.collect { it.getName() }.join(' ')
			)
		}
	}
	exclude( "module-info.class" )
	exclude( "META-INF/versions/*/module-info.class" )
}

shadow {
	mainClassName = application.mainClass.get()
}
shadowJar {
	mergeServiceFiles()
}

startScripts {
	doLast {
		def str = windowsScript.text
		str = str.replaceAll('java.exe', 'javaw.exe')
		str = str.replaceAll('"%JAVA_EXE%" %DEFAULT_JVM_OPTS%', 'start "decode-ui" /B "%JAVA_EXE%" %DEFAULT_JVM_OPTS%')
		windowsScript.text = str
	}
}

launch4j {
	mainClassName = application.mainClass.get()
	jarTask = project.tasks.shadowJar
	icon = "${projectDir}/src/main/resources/logo/logo.ico"
	outfile = "decode-ui-${YXLogDecodeVersion}.exe"
	copyright = 'Yin'
	windowTitle = 'YXLogDecode'
	companyName = 'YXLogDecode'
	jreMinVersion = '11'
	jvmOptions = ['-Dawt.useSystemAAFontSettings=lcd', '-Dswing.aatext=true', '-XX:+UseG1GC', '-Djava.util.Arrays.useLegacyMergeSort=true', '-Dfile.encoding=utf-8']
	jreRuntimeBits = "64"
	bundledJre64Bit = true
	initialHeapPercent = 5
	maxHeapSize = 1024
	maxHeapPercent = 70
	downloadUrl = 'https://www.oracle.com/java/technologies/downloads/#jdk17-windows'
	bundledJrePath = '%EXEDIR%/jre'
}

runtime {
	addOptions('--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages')
	addModules(
			'java.base',
			'java.desktop',
			'java.logging'
	)
	jpackage {
		imageOptions = ['--icon', "${projectDir}/src/main/resources/logo/logo.ico"]
		skipInstaller = true
		targetPlatformName = "win"
	}
	launcher {
		noConsole = true
	}
}

task copyDistWinWithJre(type: Copy, dependsOn: ['runtime', 'createExe']) {
	group 'YXLogDecode'
	destinationDir = new File(buildDir, "decode-ui-${YXLogDecodeVersion}-with-jre-win")
	from(runtime.jreDir) {
		include '**/*'
		into 'jre'
	}
	from(createExe.outputs) {
		include '*.exe'
	}
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task distWinWithJre(type: Zip, dependsOn: ['copyDistWinWithJre']) {
	group 'YXLogDecode'
	destinationDirectory = buildDir
	archiveFileName = "decode-ui-${YXLogDecodeVersion}-with-jre-win.zip"
	from(copyDistWinWithJre.outputs) {
		include '**/*'
	}
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}